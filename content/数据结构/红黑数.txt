1. java TreeMap, TreeSet, HashMap 内部用到了红黑数
    containsKey() get() put() remove()  时间复杂度O[log(n)]

2. 红黑树  近似平衡的二叉查找树, 确保任何一个节点的左右子树高度差不超过二者中较低的一倍
   1)节点[红色|黑色]
   2)跟节点黑色
   3)红色节点不能连续, 即红色节点的孩子和父亲不能时红色节点
   4)对每一个节点, 从该节点到null的任何路径黑色节点的数目相同(新插入的节点颜色为红)


3. 当树的结构改变(插入, 删除)时涉及调整(改变节点颜色, 调整结构[左旋| 右旋])
